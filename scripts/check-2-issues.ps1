# ===============================================
# SCRIPT KI·ªÇM TRA NHANH 2 V·∫§N ƒê·ªÄ
# ===============================================

Write-Host ""
Write-Host "üîç KI·ªÇM TRA H·ªÜ TH·ªêNG - 2 V·∫§N ƒê·ªÄ" -ForegroundColor Cyan
Write-Host "=" * 60 -ForegroundColor Gray
Write-Host ""

# V·∫•n ƒë·ªÅ 1: Database Isolation
Write-Host "üìä V·∫§N ƒê·ªÄ 1: KI·ªÇM TRA DATABASE ISOLATION" -ForegroundColor Yellow
Write-Host "-" * 60

Write-Host "`n1Ô∏è‚É£  Database Dev (Local Docker):" -ForegroundColor White
try {
    $devDb = docker compose exec -T db psql -U admin -d Web_QuanLyDiemRenLuyen -t -c "SELECT current_database(), inet_server_addr() as db_ip;" 2>&1
    if ($LASTEXITCODE -eq 0) {
        Write-Host "   ‚úÖ Dev DB ƒëang ch·∫°y:" -ForegroundColor Green
        Write-Host "   $devDb" -ForegroundColor Gray
    } else {
        Write-Host "   ‚ùå Kh√¥ng k·∫øt n·ªëi ƒë∆∞·ª£c dev DB" -ForegroundColor Red
    }
} catch {
    Write-Host "   ‚ùå L·ªói: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`n2Ô∏è‚É£  Ki·ªÉm tra port 5432 c√≥ m·ªü t·ª´ b√™n ngo√†i kh√¥ng:" -ForegroundColor White
$localIP = (Get-NetIPAddress -AddressFamily IPv4 | Where-Object {$_.IPAddress -like "192.168.*" -or $_.IPAddress -like "10.*"} | Select-Object -First 1).IPAddress
if ($localIP) {
    Write-Host "   IP m√°y local: $localIP" -ForegroundColor Cyan
    Write-Host "   ‚ö†Ô∏è  N·∫øu EC2 c√≥ th·ªÉ connect t·ªõi $localIP`:5432 => NGUY HI·ªÇM!" -ForegroundColor Yellow
} else {
    Write-Host "   ‚ÑπÔ∏è  Kh√¥ng t√¨m th·∫•y IP local" -ForegroundColor Gray
}

Write-Host "`n3Ô∏è‚É£  Ki·ªÉm tra DATABASE_URL trong backend-dev:" -ForegroundColor White
$dbUrl = docker compose exec -T backend-dev sh -c 'echo $DATABASE_URL' 2>&1
if ($dbUrl -match "@db:5432") {
    Write-Host "   ‚úÖ Backend ƒëang k·∫øt n·ªëi t·ªõi Docker DB (db:5432)" -ForegroundColor Green
    Write-Host "   $dbUrl" -ForegroundColor Gray
} elseif ($dbUrl -match "@localhost:5432") {
    Write-Host "   ‚úÖ Backend ƒëang k·∫øt n·ªëi t·ªõi localhost:5432 (Docker exposed)" -ForegroundColor Green
    Write-Host "   $dbUrl" -ForegroundColor Gray
} else {
    Write-Host "   ‚ö†Ô∏è  DATABASE_URL: $dbUrl" -ForegroundColor Yellow
    if ($dbUrl -match "(\d+\.\d+\.\d+\.\d+)") {
        Write-Host "   ‚ö†Ô∏è  Ph√°t hi·ªán IP: $($Matches[1]) - C√≥ th·ªÉ l√† EC2!" -ForegroundColor Red
    }
}

# V·∫•n ƒë·ªÅ 2: Cross-Device Login
Write-Host ""
Write-Host "=" * 60 -ForegroundColor Gray
Write-Host "üåê V·∫§N ƒê·ªÄ 2: KI·ªÇM TRA CROSS-DEVICE ACCESS" -ForegroundColor Yellow
Write-Host "-" * 60

Write-Host "`n1Ô∏è‚É£  L·∫•y IP local c·ªßa m√°y n√†y:" -ForegroundColor White
$myIP = (Get-NetIPAddress -AddressFamily IPv4 | Where-Object {$_.IPAddress -like "192.168.*" -or $_.IPAddress -like "10.*"} | Select-Object -First 1).IPAddress
if ($myIP) {
    Write-Host "   ‚úÖ IP: $myIP" -ForegroundColor Green
    Write-Host "   üì± Thi·∫øt b·ªã kh√°c c√≥ th·ªÉ truy c·∫≠p:" -ForegroundColor Cyan
    Write-Host "      Frontend: http://$myIP`:3000" -ForegroundColor White
    Write-Host "      Backend:  http://$myIP`:3001/api" -ForegroundColor White
} else {
    Write-Host "   ‚ùå Kh√¥ng t√¨m th·∫•y IP local" -ForegroundColor Red
}

Write-Host "`n2Ô∏è‚É£  Ki·ªÉm tra CORS_ORIGIN trong backend:" -ForegroundColor White
$corsOrigin = docker compose exec -T backend-dev sh -c 'echo $CORS_ORIGIN' 2>&1
if ($corsOrigin) {
    Write-Host "   CORS_ORIGIN = $corsOrigin" -ForegroundColor Gray
    
    if ($corsOrigin -match "\*" -or $corsOrigin -eq "true") {
        Write-Host "   ‚úÖ Cho ph√©p T·∫§T C·∫¢ origins (Development mode)" -ForegroundColor Green
    } elseif ($corsOrigin -match ",") {
        Write-Host "   ‚úÖ Cho ph√©p NHI·ªÄU origins" -ForegroundColor Green
        $origins = $corsOrigin -split "," | ForEach-Object { $_.Trim() }
        foreach ($origin in $origins) {
            Write-Host "      - $origin" -ForegroundColor Cyan
        }
    } elseif ($corsOrigin -match "localhost") {
        Write-Host "   ‚ö†Ô∏è  CH·ªà cho ph√©p localhost - thi·∫øt b·ªã kh√°c s·∫Ω B·ªä CH·∫∂N!" -ForegroundColor Yellow
    } else {
        Write-Host "   ‚ÑπÔ∏è  Origin: $corsOrigin" -ForegroundColor Cyan
    }
} else {
    Write-Host "   ‚ùå Kh√¥ng ƒë·ªçc ƒë∆∞·ª£c CORS_ORIGIN" -ForegroundColor Red
}

Write-Host "`n3Ô∏è‚É£  Ki·ªÉm tra REACT_APP_API_URL trong frontend:" -ForegroundColor White
$apiUrl = docker compose exec -T frontend-dev sh -c 'echo $REACT_APP_API_URL' 2>&1
if ($apiUrl) {
    Write-Host "   REACT_APP_API_URL = $apiUrl" -ForegroundColor Gray
    
    if ($apiUrl -match "localhost" -or $apiUrl -match "127\.0\.0\.1") {
        Write-Host "   ‚ö†Ô∏è  Frontend ch·ªâ bi·∫øt localhost - thi·∫øt b·ªã kh√°c KH√îNG connect ƒë∆∞·ª£c!" -ForegroundColor Yellow
        if ($myIP) {
            Write-Host "   üí° N√™n ƒë·ªïi th√†nh: http://$myIP`:3001/api" -ForegroundColor Cyan
        }
    } elseif ($apiUrl -match "(\d+\.\d+\.\d+\.\d+)") {
        Write-Host "   ‚úÖ Frontend ƒëang d√πng IP: $($Matches[1])" -ForegroundColor Green
    } else {
        Write-Host "   ‚ÑπÔ∏è  API URL: $apiUrl" -ForegroundColor Cyan
    }
} else {
    Write-Host "   ‚ùå Kh√¥ng ƒë·ªçc ƒë∆∞·ª£c REACT_APP_API_URL" -ForegroundColor Red
}

Write-Host "`n4Ô∏è‚É£  Test API t·ª´ m√°y local:" -ForegroundColor White
try {
    $healthCheck = Invoke-RestMethod -Uri "http://localhost:3001/api/health" -Method GET -TimeoutSec 5 -ErrorAction Stop
    Write-Host "   ‚úÖ Backend API ho·∫°t ƒë·ªông!" -ForegroundColor Green
    Write-Host "   Response: $($healthCheck | ConvertTo-Json -Compress)" -ForegroundColor Gray
} catch {
    Write-Host "   ‚ùå Kh√¥ng k·∫øt n·ªëi ƒë∆∞·ª£c API: $($_.Exception.Message)" -ForegroundColor Red
}

# T·ªïng k·∫øt
Write-Host ""
Write-Host "=" * 60 -ForegroundColor Gray
Write-Host "üìã T√ìM T·∫ÆT V√Ä KHUY·∫æN NGH·ªä" -ForegroundColor Cyan
Write-Host "-" * 60

Write-Host "`nüéØ ƒê·ªÉ FIX 2 v·∫•n ƒë·ªÅ:" -ForegroundColor White

Write-Host "`n1. DATABASE ISOLATION:" -ForegroundColor Yellow
Write-Host "   ‚Ä¢ ƒê·∫£m b·∫£o dev KH√îNG connect t·ªõi EC2 production DB" -ForegroundColor White
Write-Host "   ‚Ä¢ N·∫øu c·∫ßn: Restore backup t·ª´ prod v·ªÅ dev" -ForegroundColor White
Write-Host "   ‚Ä¢ Script: .\scripts\restore-prod-to-dev.ps1" -ForegroundColor Gray

Write-Host "`n2. CROSS-DEVICE LOGIN:" -ForegroundColor Yellow
if ($myIP) {
    Write-Host "   a) C·∫≠p nh·∫≠t docker-compose.yml:" -ForegroundColor White
    Write-Host "      CORS_ORIGIN: `"http://localhost:3000,http://$myIP`:3000`"" -ForegroundColor Cyan
    Write-Host "      REACT_APP_API_URL: `"http://$myIP`:3001/api`"" -ForegroundColor Cyan
    
    Write-Host "`n   b) Restart containers:" -ForegroundColor White
    Write-Host "      docker compose down" -ForegroundColor Gray
    Write-Host "      docker compose --profile dev up -d" -ForegroundColor Gray
    
    Write-Host "`n   c) Truy c·∫≠p t·ª´ thi·∫øt b·ªã kh√°c:" -ForegroundColor White
    Write-Host "      http://$myIP`:3000" -ForegroundColor Cyan
} else {
    Write-Host "   ‚ö†Ô∏è  Kh√¥ng t√¨m th·∫•y IP local ƒë·ªÉ c·∫•u h√¨nh" -ForegroundColor Red
}

Write-Host "`nüìö T√†i li·ªáu chi ti·∫øt:" -ForegroundColor White
Write-Host "   ‚Ä¢ CRITICAL_DATABASE_WARNING.md" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ FIX_CROSS_DEVICE_LOGIN.md" -ForegroundColor Cyan

Write-Host ""
Write-Host "=" * 60 -ForegroundColor Gray
Write-Host ""
