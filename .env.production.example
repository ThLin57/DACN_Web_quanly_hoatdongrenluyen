# ============================================
# Student Activity Management System
# Production Environment Configuration
# ============================================

# ===== DATABASE CONFIGURATION =====
DB_NAME=Web_QuanLyDiemRenLuyen
DB_USER=admin
# Generate strong password: openssl rand -base64 32
DB_PASSWORD=CHANGE_ME_TO_SECURE_PASSWORD

# Full database connection URL
DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}?schema=public

# ===== JWT AUTHENTICATION =====
# Generate secure secret: openssl rand -base64 64
JWT_SECRET=CHANGE_ME_TO_SUPER_SECRET_KEY
JWT_EXPIRES_IN=7d

# ===== APPLICATION CONFIGURATION =====
NODE_ENV=production
PORT=3001

# CORS Configuration - Change to your EC2 public IP or domain
CORS_ORIGIN=http://YOUR_EC2_PUBLIC_IP:3000

# ===== FRONTEND CONFIGURATION =====
# Change to your EC2 public IP or domain
REACT_APP_API_URL=http://YOUR_EC2_PUBLIC_IP:3001/api

# ===== OPTIONAL CONFIGURATIONS =====

# Email Configuration (for notifications)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASSWORD=your-app-password
# SMTP_FROM=noreply@yourdomain.com

# File Upload Configuration
# MAX_FILE_SIZE=10485760  # 10MB in bytes
# ALLOWED_FILE_TYPES=jpg,jpeg,png,pdf,doc,docx

# Session Configuration
# SESSION_SECRET=another-secure-random-string
# SESSION_MAX_AGE=86400000  # 24 hours in milliseconds

# ===== SECURITY NOTES =====
# 1. Never commit this file to git with real credentials
# 2. Use strong, unique passwords for each environment
# 3. Rotate secrets regularly (every 3-6 months)
# 4. Keep backups of this file in a secure location
# 5. Use AWS Secrets Manager or similar for production

# ===== QUICK SETUP COMMANDS =====
# Generate DB Password:
#   openssl rand -base64 32
#
# Generate JWT Secret:
#   openssl rand -base64 64
#
# Get EC2 Public IP:
#   curl ifconfig.me
#
# Test Configuration:
#   source .env && echo "DB: $DATABASE_URL"
